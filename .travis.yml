language: cpp

cache:
    ccache: true
    directories:
        - $HOME/.cache/sde

env:
    - arch=x86_64  subset=sse2
    - arch=x86_64  subset=sse4
    - arch=x86_64  subset=avx
    - arch=x86_64  subset=avx2
    - arch=x86_64  subset=avx512
    - arch=x86_64  subset=knl
    - arch=aarch64 subset=neon

os:
    - linux
    - osx

compiler:
    - gcc

# The whitespace in "env:" lines must match the definition above!
matrix:
  exclude:
    - env: arch=x86_64  subset=avx512
      os: osx
    - env: arch=x86_64  subset=knl
      os: osx
    - env: arch=aarch64 subset=neon
      os: osx
  allow_failures:
      # GCC on OS X sometimes times out. Those spurious failures are not useful
      # and GCC is tested well enough on Linux anyway. CDash will also show failures
      # if they are submitted.
    - os: osx
      compiler: gcc
    - env: arch=aarch64 subset=neon

# The following gives us Ubuntu 14.04 LTS instead of 12.04 LTS
sudo: required
dist: trusty

install:
    - [[ "$TRAVIS_OS_NAME" == "linux" ]] &&
      sudo add-apt-repository -y 'deb http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu/ xenial main' &&
      sudo add-apt-repository -y 'deb http://de.archive.ubuntu.com/ubuntu/ xenial main restricted' &&
      sudo add-apt-repository -y 'deb http://de.archive.ubuntu.com/ubuntu/ xenial-updates main restricted' &&
      sudo add-apt-repository -y 'deb http://de.archive.ubuntu.com/ubuntu/ xenial-security main restricted' &&
      sudo apt-get update -q &&
      sudo apt-get install -y libc6-dev
    - case "$TRAVIS_OS_NAME-$CXX-$arch" in
        linux-g++-x86_64)
          sudo apt-get install g++-8 binutils -y &&
          export CXX=g++-8 CC=gcc-8;;
        osx-g++-x86_64)
          brew update &&
          brew install gcc7 &&
          export CXX=g++-7 CC=gcc-7;;
        linux-g++-aarch64)
          sudo apt-get install -y g++-5-aarch64-linux-gnu &&
          export CXX=aarch64-linux-gnu-g++-5 CC=aarch64-linux-gnu-gcc-5 CMAKE_TOOLCHAIN_FILE=cmake/toolchain-arm-linux.cmake;;
      esac

before_script:
    # ptrace_scope=0 is required on Ubuntu for SDE to work
    - if test "$TRAVIS_OS_NAME" = "linux"; then
        echo 0 | sudo tee /proc/sys/kernel/yama/ptrace_scope;
      fi
    - $CXX --version
    - cmake --version
    - export dashboard_model=Experimental
    - export build_type=Release
    - export NUMBER_OF_PROCESSORS=2

script:
    - ctest -VV -S scripts/test.cmake

notifications:
    email: false
    irc:
        channels:
            - "chat.freenode.net##Vc"
        on_success: change # [always|never|change] # default: always
        on_failure: always # [always|never|change] # default: always
        use_notice: true
        skip_join: true
